;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(w3m-bookmark-title-history w3m-bookmark-section-history grep-history command-history string-rectangle-history coding-system-history w3m-input-url-history shell-command-history face-name-history iswitchb-history minibuffer-history file-name-history extended-command-history))
(setq w3m-bookmark-title-history '("14.1. csv — CSV ファイルの読み書き — Python 3.3.6 ドキュメント"))
(setq w3m-bookmark-section-history '("python3_csv" "python"))
(setq grep-history '("grep --color -nH -e -r browse-url-mozilla ." "grep --color -nH -e "))
(setq command-history '((fish-mode) (execute-extended-command nil "fish-mode" nil) (fish-mode) (execute-extended-command nil "fish-mode" "fish-") (fish-mode) (execute-extended-command nil "fish-mode" "fish-") (kill-buffer "*Packages*") (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (find-file "~/.GIT.emacs/.emacs" t) (kill-buffer ".emacs") (kill-buffer ".emacs") (find-file "~/.GIT.emacs/.emacs" t) (kill-buffer ".emacs") (find-file "~/.GIT.emacs/.emacs" t) (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (mew nil) (execute-extended-command nil "mew" "mew") (mew nil) (execute-extended-command nil "mew" "mew") (universal-argument) (execute-extended-command nil "universal-argument" "universal-argumentZ") (mew nil) (execute-extended-command nil "mew" nil) (mew nil) (execute-extended-command nil "mew" "mew") (mew nil) (execute-extended-command nil "mew" "mew") (load-file "~/.emacs") (execute-extended-command nil "load-file" "load-fi") (shell nil) (execute-extended-command nil "shell" "shel") (find-file "~/.emacs" t) (kill-buffer "*Packages*") (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (kill-buffer "*Bookmark List*") (bookmark-load "~/.emacs.d/bookmarks") (kill-buffer ".emacs") (kill-buffer "*Bookmark List*") (kill-buffer ".emacs") (find-file "~/.emacs" t) (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (jump-to-register 115 nil) (w3m-view-image) (execute-extended-command nil "w3m-view-image" "w3m-view-image") (w3m-search "google" "モジュール") (jump-to-register 7 nil) (jump-to-register 119 nil) (jump-to-register 115 nil) (jump-to-register 119 nil) (kill-buffer "*w3m*<2>") (kill-buffer "bookmark.html") (kill-buffer "bookmark.html") (kill-buffer "*w3m*") (jump-to-register 119 nil) (jump-to-register 101 nil) (w3m-goto-url "https://www.google.com/search?q=emacs-w3m+%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88+%E6%A4%9C%E7%B4%A2+google&hl=ja&lr=lang_ja&ie=utf-8&oe=utf-8" nil nil) (jump-to-register 119 nil) (jump-to-register 115 nil) (jump-to-register 119 nil) (point-to-register 115 nil) (point-to-register 119 nil) (w3m-goto-url "https://docs.python.org/" nil nil) (insert-register 80 t) (w3m-goto-url "https://docs.python.org/3.3/library/csv.html                                                                                                                            " nil nil) (w3m-goto-url "https://docs.python.org/" nil nil) (insert-register 80 t) (insert-register 112 t) (w3m-goto-url "https://docs.python.org/" nil nil) (insert-register 80 t) (insert-register 79 t) (insert-register 111 t) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" "load-fi") (insert-register 80 t) (insert-register 79 t) (insert-register 111 t) (w3m-goto-url-new-session "https://www.craneto.co.jp/archives/1309/" nil nil nil nil) (w3m-goto-url "https://www.google.com/search?q=python+csv.reader&hl=ja&lr=lang_ja&ie=utf-8&oe=utf-8" nil nil) (w3m-goto-url "https://docs.python.jp/3.3/library/csv.html" nil nil) (kill-buffer ".emacs") (w3m-goto-url "https://docs.python.jp/" nil nil) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (insert-register 69 t) (insert-register 101 t) (insert-register 71 t) (w3m-goto-url "http://sourceforge.net" nil nil) (w3m-goto-url-new-session "http://sourceforge.net" nil nil nil nil) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" "load-f") (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" "load-fi") (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (kill-buffer "*Packages*") (package-list-packages nil) (execute-extended-command nil "package-list-packages" "package-li") (list-packages nil) (execute-extended-command nil "list-packages" nil) (insert-register 71 t) (insert-register 103 t) (kill-buffer ".emacs") (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" "load-fi") (insert-register 103 t) (grep "grep --color -nH -e -r browse-url-mozilla .") (kill-buffer ".emacs") (kill-buffer "*Packages*") (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (w3m-goto-url "https://docs.python.jp/3.3/library/csv.html" nil nil) (w3m-goto-url "https://docs.python.org/3.3/library/csv.html" nil nil) (w3m "about:" nil t) (execute-extended-command nil "w3m" "w3") (kill-buffer ".bashrc") (kill-buffer ".bashrc") (find-file "~/.bashrc" t) (kill-buffer "*Messages*") (kill-buffer "*anything*") (kill-buffer "*scratch*") (kill-buffer "*anything*") (kill-buffer ".emacs") (find-file "~/.GIT.emacs/.emacs" t) (avy-goto-line 1) (execute-extended-command nil "avy-goto-line" "avy-goto-li") (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" nil) (find-file "~/.GIT.emacs/.emacs" t) (load-file "~/.GIT.emacs/.emacs") (execute-extended-command nil "load-file" "load-fi") (kill-buffer "*Packages*") (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (find-file "/tmp/a" t) (find-file "/tmp/" t) (find-file-read-only "~/.GIT.emacs/a" t) (kill-buffer ".bash_history") (kill-buffer ".vimshell") (kill-buffer ".vimshell") (switch-to-buffer "*shell*" nil 'force-same-window) (my-anything) (execute-extended-command nil "my-anything" "my-an") (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (shell-add-to-history) (execute-extended-command nil "shell-add-to-history" "shell-ad") (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (shell-add-to-history) (execute-extended-command nil "shell-add-to-history" nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (shell-add-to-history) (execute-extended-command nil "shell-add-to-history" nil) (shell-add-to-history) (execute-extended-command nil "shell-add-to-history" "shell-ad") (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (shell-command "ls" nil nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" nil) (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" "anything-complete") (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" "anything-complete-shell-history-") (kill-buffer "*Packages*") (package-list-packages nil) (execute-extended-command nil "package-list-packages" "package-li") (anything-complete-shell-history) (execute-extended-command nil "anything-complete-shell-history" "anything-complete") (shell nil) (execute-extended-command nil "shell" "shel") (list-packages nil) (execute-extended-command nil "list-packages" "list-pa") (anything) (execute-extended-command nil "anything" "any") (find-file "~/.emacs" t) (kill-buffer "*anything*") (load-file "~/.emacs") (execute-extended-command nil "load-file" "load-fi") (kill-buffer ".bash_history") (w3m "about:" nil t) (execute-extended-command nil "w3m" "w3") (kill-buffer ".emacs") (load-file "~/.emacs") (execute-extended-command nil "load-file" "load-fi") (find-file "~/.emacs" t) (find-file-read-only "~/.emacs" t)))
(setq string-rectangle-history '("-n " "neko" " " ";"))
(setq coding-system-history '("raw-text"))
(setq w3m-input-url-history '("emacs-w3m デフォルト 検索 google" "https://docs.python.org/" "https://docs.python.org/3.3/library/csv.html                                                                                                                            " #("https://docs.python.jp/3.3/library/csv.html                                                                                                                              " 0 43 (w3m-safe-url-regexp nil face (w3m-header-line-location-content) rear-nonsticky t) 43 169 (w3m-safe-url-regexp nil face (w3m-header-line-location-content) rear-nonsticky t)) "https://www.craneto.co.jp/archives/1309/" "python csv.reader" "https://docs.python.jp/3.3/library/csv.html" "https://docs.python.jp/" "http://sourceforge.net" "https://docs.python.org/3.3/library/csv.html" "http://www.nekochango.com" "http://nekochango.com" "about:" "http://nekochango.jp" "http://yahoo.co.jp"))
(setq shell-command-history '("ls" "gcc -Wall -g algorithm_ary.c " "!gcc" "gcc -Wall -g algorithm_ary.c " "make" "ls"))
(setq face-name-history '("bold"))
(setq iswitchb-history '("sh" "shel" "she" "sh" "w3" "she" "shel" "sh" "shel" "sh" "she" "shel" "sh" "shel" "she" ".emacs" "sh"))
(setq minibuffer-history '("pw" "pwd" "l " "ls" ".git" "ls" "p" ".emacs" ".emacs " "emacs" "she" "モジュール" "w3m" "ca" "w3m" "shel" ".emacs" "w3" "emacs" "shel" "emacs" "3" "emacs" "w3m" "emacs" "shel" "bashrc" "bash" "local" "vos" "---" "neko" "local" "mv .target_ /var/www/.git_/" "shell" "http://www.oreilly.com/programming/free/files/a-whirlwind-tour-of-python.pdf" "pdf" "1" "local" "shel" "bash_" "she" "ls" "shel" "ls" "l" "ba" "sh" "ko 32046  9月 30 20:52 .bash_historyko 32046  9月 30 20:52 .bash_history" "ko  4096  9月 30 20:52 .w3m" "shel" "
" "drwxr-xr-x  4 neko neko  4096  9月 30 20:15 .GIT.emacs" "histo" "sh" "copy" "main" "1" "2" "1" "translator" "~/junk/2017-09-30-200335." "local/" "o" "A" "a" "p" "bashr" "1" "/home/neko/local/src/c/GTAGS" "real	" "GTAGS" #("/home/neko/local/src/c/G" 0 22 (front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t inhibit-line-move-field-capture t)) "http://www.emacswiki.org/cgi-bin/wiki/anything-gtags.el" "https://raw.github.com/voins/gtags/master/gtags.el" "gtags" "anything-gtags.el" "usoku" ".bashr" "shell" "aki" "kondo akinori" "1" "kondo desu" "~/junk/2017/09-30-033138.txt" ".emacs" "auto-complete" "e" "auto-i" "auto-install" "auto-" "auto-install" "auto-ins"))
(setq file-name-history '("~/.GIT.emacs/.emacs" "~/.GIT.emacs/" "~/.GIT.emacs/.emacs" "~/.emacs" "~/" "~/.emacs" "~/.GIT.emacs/" "~/.GIT.emacs/.emacs" "~/work/python3/" "~/.GIT.emacs/.emacs" "~/work/python3/" "~/.w3m/" "~/.bashrc" "~/work/" "~/work/http://www.oreilly.com/programming/free/files/a-whirlwind-tour-of-python.pdf" "~/.GIT.emacs/" "~/.GIT.emacs/.emacs" "/tmp/a" "/tmp/" "~/.GIT.emacs/a" "~/.emacs" "~/local/src/c" "~/.emacs" "~/.bashrc" "~/.GIT.emacs/.emacs" "~/.emacs" "~/.GIT.emacs/.emacs" "~/local/env/bin/renew_elisp.sh" "~/.GIT.emacs/" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/" "~/.bashrc" "~/.GIT.emacs/.emacs" "~/local/src/c/a.c" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/.em" "~/.GIT.emacs/.emacs" "/tmp/my_gtags.el" "~/.emacs" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.emacs" "/tmp/global-6.5.5/./gtags.el" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.GIT.emacs/.emacs" "~/.emacs" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.GIT.emacs/.emacs.d/global/" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.GIT.emacs/" "~/.emacs" "~/.GIT.emacs/.emacs.d/global/my_gtags.el" "~/.GIT.emacs/./.emacs.d/elpa/anything-20170125.1710/anything-gtags.el" "~/.emacs" "~/.GIT.emacs/.emacs" "~/.emacs.d/auto-install/" "~/.emacs" "~/.bashrc" "~/.GIT.emacs/.emacs" "~/.emacs" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/.emacs.d/elpa/annotate-20170227.23/" "~/local/src/c/parts/Simple/algorithm_ary.c" "~/.GIT.emacs/./.emacs.d/elpa/annotate-20170227.23/annotate.el" "~/local/src/c/parts/Simple/algorithm_ary.c" "~/.GIT.emacs/./.emacs.d/elpa/annotate-20170227.23/annotate.el" "~/local/src/c/parts/Simple/algorithm_ary.c" "~/.GIT.emacs/lo" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/./.emacs.d/elpa/annotate-20170227.23/annotate.el" "~/.GIT.emacs/.emacs" "~/.GIT.emacs/" "~/.GIT.emacs/.emacs" "~/.emacs" "~/junk/2017/." "~/.GIT.emacs/.emacs" "/tmp/AA1/b" "/tmp/AA1/" "/tmp/AA1/a" "~/.GIT.emacs/.emacs" "/tmp/bbb" "/tmp/aaa" "~/.bashrc" "~/.GIT.emacs/.emacs" "~/.emacs" "~/.GIT.emacs/.emacs" "~/bin/mdt" "~/.bashrc" "~/.GIT.emacs/.emacs" "~/.emacs" "~/.bashrc" "~/.emacs" "~/~/.emacs" "~/.emacs"))
(setq extended-command-history '("anything" "fish-mode" "list-packages" "s" "list-packages" "mew" "universal-argument" "mew" "load-file" "shell" "list-packages" "w3m-view-image" "load-file" "emacs-" "load-file" "package-list-packages" "list-packages" "load-file" "list-packages" "w3m" #("/home/neko/work" 0 15 (front-sticky (field inhibit-line-move-field-capture) rear-nonsticky t inhibit-line-move-field-capture t)) "avy-goto-line" "load-file" "avy-" "load-file" "list-packages" "sehl" "my-anything" "anything-o" "anything--other-bu" "anything-call-source" "anything-c-set-variabl" "anything-complete-shell-history" "shell-add-to-history" "anything-complete-shell-history" "shell-history-send-bug-report" "shell-add-to-history" "anything-complete-shell-history" "shell-add-to-history" "anything-complete-shell-history" "package-list-packages" "anything-complete-shell-history" "anything-" "shell" "list-packages" "anything" "load-file" "w3m" "load-file" "shell" "list-packages" "auto-install-batch" "ediff" "descb" "shell" "load-file" "shell" "list-packages" "recenter" "anything-gtags" "load-file" "anything-next-source" "list-packages" "anything-next-source" "my-anything" "load-file" "nu-mo" "load-file" "gtags-find-file" "load-file" "gtags-find-file" "load-file" "shell" "load-file" "auto-install-from-url" "load-file" "shell" "load-file" "auto-install-from-url" "diff" "anything" "anyt" "an" "any" "install-elisp-from-emacswiki" "anything-g" "load-file" "shell" "list-packages" "anything" "anything-" "load-file" "anything-g" "install-elisp-from-emacswiki" "anythinginstall-elisp-from-emacs" "install-elisp-from-emacswiki" "list-packages" "load-file" "anything-google-suggest" "anything-resume" "anything-for-files" "anything" "load-file" "list-packages" "load-file" "shell" "load-file" "shell" "load-file" "annotate-" "load-file" "list-packages" "w3m" "load-file" "w3" "w3m" "load-" "w3" "list-packages" "w3" "list-packages" "package-list-packages" "package-install" "list-packages" "load-file" "list-packages" "load-file" "shell" "number-to-register" "shell" "load-file" "list-packages" "package-install" "recentf-open-files" "load-file" "package-list-packages" "insert-" "aut" "load-file" "auto" "package-list-packages" "column-number-mode" "list-faces-display" "describe-face" "list-faces-display" "describe-face" "load-file" "shell" "package-install" "list-packages" "package-install" "load-file" "package-install" "auto" "load-file" "install-elisp-from-e" "load-file"))
